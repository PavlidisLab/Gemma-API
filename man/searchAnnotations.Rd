% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allEndpoints.R
\name{searchAnnotations}
\alias{searchAnnotations}
\title{searchAnnotations
Does a search for annotations based on the given string}
\usage{
searchAnnotations(
  query = NA_character_,
  raw = FALSE,
  async = FALSE,
  memoised = FALSE,
  file = NA_character_,
  overwrite = FALSE
)
}
\arguments{
\item{query}{<p class='description-frow'>Required, defaults to <code>empty</code>.</p><p>   The search query. Either plain text ('traumatic'), or an ontology term URI ('http://purl.obolibrary.org/obo/UBERON_0002048').    Datasets that contain the given string in their short of full name will also be matched ('GSE201', 'Bronchoalveolar lavage samples'.</p><p>   Can be multiple identifiers separated by commas.</p><p class='description-imp'>   <span class='glyphicon glyphicon-th-large glyphicon-exclamation-sign'></span>   When using in scripts, remember to URL-encode any forward slashes in the phenotype value URIs (see the compiled URL below).</p>}

\item{raw}{<p><code>FALSE</code> to receive results as-is from Gemma, or <code>TRUE</code> to enable parsing.</p>}

\item{async}{<p><code>TRUE</code> to run the API query on a separate worker, or <code>FALSE</code> to run synchronously. See the <code>async</code> package for details.</p>}

\item{memoised}{<p>Whether or not to cache results so future requests for the same data will be faster. Use <code>forgetGemmaMemoised</code> to clear the cache.</p>}

\item{file}{<p>The name of a file to save the results to, or <code>NULL</code> to not write results to a file. If <code>raw == TRUE</code>, the output will be a JSON file. Otherwise, it will be a RDS file.</p>}

\item{overwrite}{<p>Whether or not to overwrite if a file exists at the specified filename.</p>}
}
\value{
<p> An array of annotations (annotation search result value objects) matching the given identifiers.</p><p>A <code>400 error</code> if required parameters are missing.</p>
}
\description{
searchAnnotations
Does a search for annotations based on the given string
}
