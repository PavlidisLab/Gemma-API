% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zz_open_api_expose.R
\name{gemma_api}
\alias{gemma_api}
\title{Full API wrapper}
\description{
Exposes the full Gemma API. Auto generated using
\href{https://openapi-generator.tech/}{OpenAPI generator} and used internally
in endpoint functions. Exposed to user to allow access unsupported endpoints
by the main package.
}
\section{Methods}{

\describe{
\strong{ get_api_info } \emph{ Retrieve an object with basic API information }

\itemize{
\item \emph{ @returnType } \link{ResponseDataObjectApiInfoValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectApiInfoValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_annotations } \emph{ Retrieve the annotations analysis of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectSetAnnotationValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectSetAnnotationValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_design } \emph{ Retrieve the design of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}

\item status code : 200 |

\item return type : data.frame
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_differential_expression } \emph{ Retrieve the expression levels of a set of datasets subject to a threshold on their differential expressions }

\itemize{
\item \emph{ @param } datasets list( \link{GetResultSetsDatasetsParameterInner} )
\item \emph{ @param } diff_ex_set integer
\item \emph{ @param } threshold numeric
\item \emph{ @param } limit integer
\item \emph{ @param } keep_non_specific character
\item \emph{ @param } consolidate Enum < \link{pickmax, pickvar, average} >
\item \emph{ @returnType } \link{ResponseDataObjectListExperimentExpressionLevelsValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListExperimentExpressionLevelsValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_differential_expression_analyses } \emph{ Retrieve the differential analyses of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{ResponseDataObjectListDifferentialExpressionAnalysisValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectListDifferentialExpressionAnalysisValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_differential_expression_analyses_result_sets } \emph{ Retrieve the result sets of all differential analyses of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}

\item status code : 302 | If the dataset is found, a redirection to the corresponding getResultSets operation.

\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_expression } \emph{ Retrieve the expression data of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @param } filter character

\item status code : 200 |

\item return type : data.frame
\item response headers :

\tabular{ll}{
}
\item status code : 204 | The dataset expression matrix is empty.

\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_expression_for_genes } \emph{ Retrieve the expression data matrix of a set of datasets and genes }

\itemize{
\item \emph{ @param } datasets list( \link{GetResultSetsDatasetsParameterInner} )
\item \emph{ @param } genes list( \link{GetDatasetExpressionForGenesGenesParameterInner} )
\item \emph{ @param } keep_non_specific character
\item \emph{ @param } consolidate Enum < \link{pickmax, pickvar, average} >
\item \emph{ @returnType } \link{ResponseDataObjectListExperimentExpressionLevelsValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListExperimentExpressionLevelsValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_expression_pca } \emph{ Retrieve the principal components (PCA) of a set of datasets }

\itemize{
\item \emph{ @param } datasets list( \link{GetResultSetsDatasetsParameterInner} )
\item \emph{ @param } component integer
\item \emph{ @param } limit integer
\item \emph{ @param } keep_non_specific character
\item \emph{ @param } consolidate Enum < \link{pickmax, pickvar, average} >
\item \emph{ @returnType } \link{ResponseDataObjectListExperimentExpressionLevelsValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListExperimentExpressionLevelsValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_platforms } \emph{ Retrieve the platform of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListArrayDesignValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectListArrayDesignValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_raw_expression } \emph{ Retrieve raw expression data of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}

\item status code : 200 |

\item return type : data.frame
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_samples } \emph{ Retrieve the samples of a dataset }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListBioAssayValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectListBioAssayValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_dataset_svd } \emph{ Retrieve the singular value decomposition (SVD) of a dataset expression data }

\itemize{
\item \emph{ @param } dataset \link{GetResultSetsDatasetsParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectSimpleSVDValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectSimpleSVDValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The dataset does not exist.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_datasets } \emph{ Retrieve all datasets }

\itemize{
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_datasets_by_ids } \emph{ Retrieve datasets by their identifiers }

\itemize{
\item \emph{ @param } dataset list( \link{GetResultSetsDatasetsParameterInner} )
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_gene_gene_coexpression } \emph{ Retrieve the coexpression of two given genes }

\itemize{
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @param } with \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @param } limit integer
\item \emph{ @param } stringency integer
\item \emph{ @returnType } \link{ResponseDataObjectListCoexpressionValueObjectExt} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListCoexpressionValueObjectExt
\item response headers :

\tabular{ll}{
}
}

\strong{ get_gene_go_terms } \emph{ Retrieve the GO terms associated to a gene }

\itemize{
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListGeneOntologyTermValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListGeneOntologyTermValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_gene_locations } \emph{ Retrieve the physical locations of a given gene }

\itemize{
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListPhysicalLocationValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListPhysicalLocationValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_gene_locations_in_taxon } \emph{ Retrieve physical locations for a given gene and taxon }

\itemize{
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListPhysicalLocationValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListPhysicalLocationValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_gene_probes } \emph{ Retrieve the probes associated to a genes }

\itemize{
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResponseDataObjectCompositeSequenceValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectCompositeSequenceValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_genes } \emph{ Retrieve genes matching a gene identifier }

\itemize{
\item \emph{ @param } genes list( \link{GetDatasetExpressionForGenesGenesParameterInner} )
\item \emph{ @returnType } \link{ResponseDataObjectListGeneValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListGeneValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platform_annotations } \emph{ Retrieve the annotations of a given platform }

\itemize{
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}

\item status code : 200 |

\item return type : data.frame
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platform_datasets } \emph{ Retrieve all experiments within a given platform }

\itemize{
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platform_element } \emph{ Retrieve the selected composite sequences for a given platform }

\itemize{
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}
\item \emph{ @param } probes list( \link{GetPlatformElementProbesParameterInner} )
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResponseDataObjectCompositeSequenceValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectCompositeSequenceValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platform_element_genes } \emph{ Retrieve the genes associated to a probe in a given platform }

\itemize{
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}
\item \emph{ @param } probe \link{GetPlatformElementProbesParameterInner}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResponseDataObjectGeneValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectGeneValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platform_elements } \emph{ Retrieve the composite sequences for a given platform }

\itemize{
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{PaginatedResponseDataObjectCompositeSequenceValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectCompositeSequenceValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platforms } \emph{ Retrieve all platforms }

\itemize{
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectArrayDesignValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectArrayDesignValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_platforms_by_ids } \emph{ Retrieve all platforms matching a set of platform identifiers }

\itemize{
\item \emph{ @param } platform list( \link{GetPlatformAnnotationsPlatformParameter} )
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectArrayDesignValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectArrayDesignValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_result_set } \emph{ Retrieve a single analysis result set by its identifier }

\itemize{
\item \emph{ @param } result_set integer
\item \emph{ @returnType } \link{ResponseDataObjectExpressionAnalysisResultSetValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectExpressionAnalysisResultSetValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The analysis result set could not be found.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_result_set_as_tsv } \emph{ Retrieve a single analysis result set by its identifier as a tab-separated values }

\itemize{
\item \emph{ @param } result_set_ integer

\item status code : 200 |

\item return type : data.frame
\item response headers :

\tabular{ll}{
}
\item status code : 404 | The analysis result set could not be found.

\item response headers :

\tabular{ll}{
}
}

\strong{ get_result_sets } \emph{ Retrieve all result sets matching the provided criteria }

\itemize{
\item \emph{ @param } datasets list( \link{GetResultSetsDatasetsParameterInner} )
\item \emph{ @param } database_entries list( \link{GetResultSetsDatabaseEntriesParameterInner} )
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionAnalysisResultSetValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionAnalysisResultSetValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_taxa } \emph{ Retrieve all available taxa }

\itemize{
\item \emph{ @returnType } \link{ResponseDataObjectListTaxonValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListTaxonValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_taxa_by_ids } \emph{ Retrieve taxa by their identifiers }

\itemize{
\item \emph{ @param } taxa list( \link{SearchTaxonDatasetsTaxonParameter} )
\item \emph{ @returnType } \link{ResponseDataObjectListTaxonValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListTaxonValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_taxon_datasets } \emph{ Retrieve the datasets for a given taxon }

\itemize{
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_taxon_genes } \emph{ Retrieve all genes in a given taxon }

\itemize{
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } gene \link{GetDatasetExpressionForGenesGenesParameterInner}
\item \emph{ @returnType } \link{ResponseDataObjectListGeneValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListGeneValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ get_taxon_genes_overlapping_chromosome } \emph{ Retrieve genes overlapping a given region in a taxon }

\itemize{
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } chromosome character
\item \emph{ @param } strand character
\item \emph{ @param } start integer
\item \emph{ @param } size integer
\item \emph{ @returnType } \link{ResponseDataObjectListGeneValueObject} \cr

\item status code : 0 | default response

\item return type : ResponseDataObjectListGeneValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ search } \emph{ Search everything in Gemma. }

\itemize{
\item \emph{ @param } query character
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } platform \link{GetPlatformAnnotationsPlatformParameter}
\item \emph{ @param } result_types Enum < \link{ubic.gemma.model.common.description.BibliographicReference, ubic.gemma.model.analysis.expression.ExpressionExperimentSet, ubic.gemma.model.genome.gene.GeneSet, ubic.gemma.model.genome.Gene, ubic.gemma.model.expression.experiment.ExpressionExperiment, ubic.gemma.model.genome.biosequence.BioSequence, ubic.gemma.model.association.phenotype.PhenotypeAssociation, ubic.gemma.model.expression.arrayDesign.ArrayDesign, ubic.gemma.model.expression.designElement.CompositeSequence} >
\item \emph{ @param } limit integer
\item \emph{ @returnType } \link{SearchResultsResponseDataObject} \cr

\item status code : 0 | default response

\item return type : SearchResultsResponseDataObject
\item response headers :

\tabular{ll}{
}
}

\strong{ search_annotations } \emph{ Search for annotation tags }

\itemize{
\item \emph{ @param } query list( character )
\item \emph{ @returnType } \link{ResponseDataObjectListAnnotationSearchResultValueObject} \cr

\item status code : 200 |

\item return type : ResponseDataObjectListAnnotationSearchResultValueObject
\item response headers :

\tabular{ll}{
}
\item status code : 400 | The search query is empty.

\item return type : ResponseErrorObject
\item response headers :

\tabular{ll}{
}
}

\strong{ search_datasets } \emph{ Retrieve datasets associated to an annotation tags search }

\itemize{
\item \emph{ @param } query list( character )
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

\strong{ search_taxon_datasets } \emph{ Retrieve datasets within a given taxa associated to an annotation tags search }

\itemize{
\item \emph{ @param } taxon \link{SearchTaxonDatasetsTaxonParameter}
\item \emph{ @param } query list( character )
\item \emph{ @param } filter character
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } sort character
\item \emph{ @returnType } \link{PaginatedResponseDataObjectExpressionExperimentValueObject} \cr

\item status code : 0 | default response

\item return type : PaginatedResponseDataObjectExpressionExperimentValueObject
\item response headers :

\tabular{ll}{
}
}

}
}

\keyword{misc}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DefaultApi-new}{\code{gemma_api$new()}}
\item \href{#method-DefaultApi-get_api_info}{\code{gemma_api$get_api_info()}}
\item \href{#method-DefaultApi-get_api_info_with_http_info}{\code{gemma_api$get_api_info_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_annotations}{\code{gemma_api$get_dataset_annotations()}}
\item \href{#method-DefaultApi-get_dataset_annotations_with_http_info}{\code{gemma_api$get_dataset_annotations_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_design}{\code{gemma_api$get_dataset_design()}}
\item \href{#method-DefaultApi-get_dataset_design_with_http_info}{\code{gemma_api$get_dataset_design_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression}{\code{gemma_api$get_dataset_differential_expression()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression_with_http_info}{\code{gemma_api$get_dataset_differential_expression_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression_analyses}{\code{gemma_api$get_dataset_differential_expression_analyses()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression_analyses_with_http_info}{\code{gemma_api$get_dataset_differential_expression_analyses_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression_analyses_result_sets}{\code{gemma_api$get_dataset_differential_expression_analyses_result_sets()}}
\item \href{#method-DefaultApi-get_dataset_differential_expression_analyses_result_sets_with_http_info}{\code{gemma_api$get_dataset_differential_expression_analyses_result_sets_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_expression}{\code{gemma_api$get_dataset_expression()}}
\item \href{#method-DefaultApi-get_dataset_expression_with_http_info}{\code{gemma_api$get_dataset_expression_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_expression_for_genes}{\code{gemma_api$get_dataset_expression_for_genes()}}
\item \href{#method-DefaultApi-get_dataset_expression_for_genes_with_http_info}{\code{gemma_api$get_dataset_expression_for_genes_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_expression_pca}{\code{gemma_api$get_dataset_expression_pca()}}
\item \href{#method-DefaultApi-get_dataset_expression_pca_with_http_info}{\code{gemma_api$get_dataset_expression_pca_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_platforms}{\code{gemma_api$get_dataset_platforms()}}
\item \href{#method-DefaultApi-get_dataset_platforms_with_http_info}{\code{gemma_api$get_dataset_platforms_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_raw_expression}{\code{gemma_api$get_dataset_raw_expression()}}
\item \href{#method-DefaultApi-get_dataset_raw_expression_with_http_info}{\code{gemma_api$get_dataset_raw_expression_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_samples}{\code{gemma_api$get_dataset_samples()}}
\item \href{#method-DefaultApi-get_dataset_samples_with_http_info}{\code{gemma_api$get_dataset_samples_with_http_info()}}
\item \href{#method-DefaultApi-get_dataset_svd}{\code{gemma_api$get_dataset_svd()}}
\item \href{#method-DefaultApi-get_dataset_svd_with_http_info}{\code{gemma_api$get_dataset_svd_with_http_info()}}
\item \href{#method-DefaultApi-get_datasets}{\code{gemma_api$get_datasets()}}
\item \href{#method-DefaultApi-get_datasets_with_http_info}{\code{gemma_api$get_datasets_with_http_info()}}
\item \href{#method-DefaultApi-get_datasets_by_ids}{\code{gemma_api$get_datasets_by_ids()}}
\item \href{#method-DefaultApi-get_datasets_by_ids_with_http_info}{\code{gemma_api$get_datasets_by_ids_with_http_info()}}
\item \href{#method-DefaultApi-get_gene_gene_coexpression}{\code{gemma_api$get_gene_gene_coexpression()}}
\item \href{#method-DefaultApi-get_gene_gene_coexpression_with_http_info}{\code{gemma_api$get_gene_gene_coexpression_with_http_info()}}
\item \href{#method-DefaultApi-get_gene_go_terms}{\code{gemma_api$get_gene_go_terms()}}
\item \href{#method-DefaultApi-get_gene_go_terms_with_http_info}{\code{gemma_api$get_gene_go_terms_with_http_info()}}
\item \href{#method-DefaultApi-get_gene_locations}{\code{gemma_api$get_gene_locations()}}
\item \href{#method-DefaultApi-get_gene_locations_with_http_info}{\code{gemma_api$get_gene_locations_with_http_info()}}
\item \href{#method-DefaultApi-get_gene_locations_in_taxon}{\code{gemma_api$get_gene_locations_in_taxon()}}
\item \href{#method-DefaultApi-get_gene_locations_in_taxon_with_http_info}{\code{gemma_api$get_gene_locations_in_taxon_with_http_info()}}
\item \href{#method-DefaultApi-get_gene_probes}{\code{gemma_api$get_gene_probes()}}
\item \href{#method-DefaultApi-get_gene_probes_with_http_info}{\code{gemma_api$get_gene_probes_with_http_info()}}
\item \href{#method-DefaultApi-get_genes}{\code{gemma_api$get_genes()}}
\item \href{#method-DefaultApi-get_genes_with_http_info}{\code{gemma_api$get_genes_with_http_info()}}
\item \href{#method-DefaultApi-get_platform_annotations}{\code{gemma_api$get_platform_annotations()}}
\item \href{#method-DefaultApi-get_platform_annotations_with_http_info}{\code{gemma_api$get_platform_annotations_with_http_info()}}
\item \href{#method-DefaultApi-get_platform_datasets}{\code{gemma_api$get_platform_datasets()}}
\item \href{#method-DefaultApi-get_platform_datasets_with_http_info}{\code{gemma_api$get_platform_datasets_with_http_info()}}
\item \href{#method-DefaultApi-get_platform_element}{\code{gemma_api$get_platform_element()}}
\item \href{#method-DefaultApi-get_platform_element_with_http_info}{\code{gemma_api$get_platform_element_with_http_info()}}
\item \href{#method-DefaultApi-get_platform_element_genes}{\code{gemma_api$get_platform_element_genes()}}
\item \href{#method-DefaultApi-get_platform_element_genes_with_http_info}{\code{gemma_api$get_platform_element_genes_with_http_info()}}
\item \href{#method-DefaultApi-get_platform_elements}{\code{gemma_api$get_platform_elements()}}
\item \href{#method-DefaultApi-get_platform_elements_with_http_info}{\code{gemma_api$get_platform_elements_with_http_info()}}
\item \href{#method-DefaultApi-get_platforms}{\code{gemma_api$get_platforms()}}
\item \href{#method-DefaultApi-get_platforms_with_http_info}{\code{gemma_api$get_platforms_with_http_info()}}
\item \href{#method-DefaultApi-get_platforms_by_ids}{\code{gemma_api$get_platforms_by_ids()}}
\item \href{#method-DefaultApi-get_platforms_by_ids_with_http_info}{\code{gemma_api$get_platforms_by_ids_with_http_info()}}
\item \href{#method-DefaultApi-get_result_set}{\code{gemma_api$get_result_set()}}
\item \href{#method-DefaultApi-get_result_set_with_http_info}{\code{gemma_api$get_result_set_with_http_info()}}
\item \href{#method-DefaultApi-get_result_set_as_tsv}{\code{gemma_api$get_result_set_as_tsv()}}
\item \href{#method-DefaultApi-get_result_set_as_tsv_with_http_info}{\code{gemma_api$get_result_set_as_tsv_with_http_info()}}
\item \href{#method-DefaultApi-get_result_sets}{\code{gemma_api$get_result_sets()}}
\item \href{#method-DefaultApi-get_result_sets_with_http_info}{\code{gemma_api$get_result_sets_with_http_info()}}
\item \href{#method-DefaultApi-get_taxa}{\code{gemma_api$get_taxa()}}
\item \href{#method-DefaultApi-get_taxa_with_http_info}{\code{gemma_api$get_taxa_with_http_info()}}
\item \href{#method-DefaultApi-get_taxa_by_ids}{\code{gemma_api$get_taxa_by_ids()}}
\item \href{#method-DefaultApi-get_taxa_by_ids_with_http_info}{\code{gemma_api$get_taxa_by_ids_with_http_info()}}
\item \href{#method-DefaultApi-get_taxon_datasets}{\code{gemma_api$get_taxon_datasets()}}
\item \href{#method-DefaultApi-get_taxon_datasets_with_http_info}{\code{gemma_api$get_taxon_datasets_with_http_info()}}
\item \href{#method-DefaultApi-get_taxon_genes}{\code{gemma_api$get_taxon_genes()}}
\item \href{#method-DefaultApi-get_taxon_genes_with_http_info}{\code{gemma_api$get_taxon_genes_with_http_info()}}
\item \href{#method-DefaultApi-get_taxon_genes_overlapping_chromosome}{\code{gemma_api$get_taxon_genes_overlapping_chromosome()}}
\item \href{#method-DefaultApi-get_taxon_genes_overlapping_chromosome_with_http_info}{\code{gemma_api$get_taxon_genes_overlapping_chromosome_with_http_info()}}
\item \href{#method-DefaultApi-search}{\code{gemma_api$search()}}
\item \href{#method-DefaultApi-search_with_http_info}{\code{gemma_api$search_with_http_info()}}
\item \href{#method-DefaultApi-search_annotations}{\code{gemma_api$search_annotations()}}
\item \href{#method-DefaultApi-search_annotations_with_http_info}{\code{gemma_api$search_annotations_with_http_info()}}
\item \href{#method-DefaultApi-search_datasets}{\code{gemma_api$search_datasets()}}
\item \href{#method-DefaultApi-search_datasets_with_http_info}{\code{gemma_api$search_datasets_with_http_info()}}
\item \href{#method-DefaultApi-search_taxon_datasets}{\code{gemma_api$search_taxon_datasets()}}
\item \href{#method-DefaultApi-search_taxon_datasets_with_http_info}{\code{gemma_api$search_taxon_datasets_with_http_info()}}
\item \href{#method-DefaultApi-clone}{\code{gemma_api$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$new(api_client)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_api_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_api_info}{}}}
\subsection{Method \code{get_api_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_api_info(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_api_info_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_api_info_with_http_info}{}}}
\subsection{Method \code{get_api_info_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_api_info_with_http_info(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_annotations"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_annotations}{}}}
\subsection{Method \code{get_dataset_annotations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_annotations(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_annotations_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_annotations_with_http_info}{}}}
\subsection{Method \code{get_dataset_annotations_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_annotations_with_http_info(
  dataset,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_design"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_design}{}}}
\subsection{Method \code{get_dataset_design()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_design(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_design_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_design_with_http_info}{}}}
\subsection{Method \code{get_dataset_design_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_design_with_http_info(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression}{}}}
\subsection{Method \code{get_dataset_differential_expression()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression(
  datasets,
  diff_ex_set = NULL,
  threshold = 1,
  limit = 100,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression_with_http_info}{}}}
\subsection{Method \code{get_dataset_differential_expression_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression_with_http_info(
  datasets,
  diff_ex_set = NULL,
  threshold = 1,
  limit = 100,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression_analyses"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression_analyses}{}}}
\subsection{Method \code{get_dataset_differential_expression_analyses()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression_analyses(
  dataset,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression_analyses_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression_analyses_with_http_info}{}}}
\subsection{Method \code{get_dataset_differential_expression_analyses_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression_analyses_with_http_info(
  dataset,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression_analyses_result_sets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression_analyses_result_sets}{}}}
\subsection{Method \code{get_dataset_differential_expression_analyses_result_sets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression_analyses_result_sets(
  dataset,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_differential_expression_analyses_result_sets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_differential_expression_analyses_result_sets_with_http_info}{}}}
\subsection{Method \code{get_dataset_differential_expression_analyses_result_sets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_differential_expression_analyses_result_sets_with_http_info(
  dataset,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression}{}}}
\subsection{Method \code{get_dataset_expression()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression(
  dataset,
  filter = FALSE,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression_with_http_info}{}}}
\subsection{Method \code{get_dataset_expression_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression_with_http_info(
  dataset,
  filter = FALSE,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression_for_genes"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression_for_genes}{}}}
\subsection{Method \code{get_dataset_expression_for_genes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression_for_genes(
  datasets,
  genes,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression_for_genes_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression_for_genes_with_http_info}{}}}
\subsection{Method \code{get_dataset_expression_for_genes_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression_for_genes_with_http_info(
  datasets,
  genes,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression_pca"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression_pca}{}}}
\subsection{Method \code{get_dataset_expression_pca()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression_pca(
  datasets,
  component = 1,
  limit = 100,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_expression_pca_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_expression_pca_with_http_info}{}}}
\subsection{Method \code{get_dataset_expression_pca_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_expression_pca_with_http_info(
  datasets,
  component = 1,
  limit = 100,
  keep_non_specific = FALSE,
  consolidate = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_platforms"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_platforms}{}}}
\subsection{Method \code{get_dataset_platforms()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_platforms(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_platforms_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_platforms_with_http_info}{}}}
\subsection{Method \code{get_dataset_platforms_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_platforms_with_http_info(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_raw_expression"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_raw_expression}{}}}
\subsection{Method \code{get_dataset_raw_expression()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_raw_expression(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_raw_expression_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_raw_expression_with_http_info}{}}}
\subsection{Method \code{get_dataset_raw_expression_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_raw_expression_with_http_info(
  dataset,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_samples"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_samples}{}}}
\subsection{Method \code{get_dataset_samples()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_samples(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_samples_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_samples_with_http_info}{}}}
\subsection{Method \code{get_dataset_samples_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_samples_with_http_info(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_svd"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_svd}{}}}
\subsection{Method \code{get_dataset_svd()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_svd(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_dataset_svd_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_dataset_svd_with_http_info}{}}}
\subsection{Method \code{get_dataset_svd_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_dataset_svd_with_http_info(dataset, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_datasets}{}}}
\subsection{Method \code{get_datasets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_datasets(
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_datasets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_datasets_with_http_info}{}}}
\subsection{Method \code{get_datasets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_datasets_with_http_info(
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_datasets_by_ids"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_datasets_by_ids}{}}}
\subsection{Method \code{get_datasets_by_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_datasets_by_ids(
  dataset,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_datasets_by_ids_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_datasets_by_ids_with_http_info}{}}}
\subsection{Method \code{get_datasets_by_ids_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_datasets_by_ids_with_http_info(
  dataset,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_gene_coexpression"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_gene_coexpression}{}}}
\subsection{Method \code{get_gene_gene_coexpression()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_gene_coexpression(
  gene,
  with = NULL,
  limit = 100,
  stringency = 1,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_gene_coexpression_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_gene_coexpression_with_http_info}{}}}
\subsection{Method \code{get_gene_gene_coexpression_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_gene_coexpression_with_http_info(
  gene,
  with = NULL,
  limit = 100,
  stringency = 1,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_go_terms"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_go_terms}{}}}
\subsection{Method \code{get_gene_go_terms()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_go_terms(gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_go_terms_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_go_terms_with_http_info}{}}}
\subsection{Method \code{get_gene_go_terms_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_go_terms_with_http_info(gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_locations"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_locations}{}}}
\subsection{Method \code{get_gene_locations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_locations(gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_locations_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_locations_with_http_info}{}}}
\subsection{Method \code{get_gene_locations_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_locations_with_http_info(gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_locations_in_taxon"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_locations_in_taxon}{}}}
\subsection{Method \code{get_gene_locations_in_taxon()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_locations_in_taxon(taxon, gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_locations_in_taxon_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_locations_in_taxon_with_http_info}{}}}
\subsection{Method \code{get_gene_locations_in_taxon_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_locations_in_taxon_with_http_info(
  taxon,
  gene,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_probes"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_probes}{}}}
\subsection{Method \code{get_gene_probes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_probes(gene, offset = 0, limit = 20, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_gene_probes_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_gene_probes_with_http_info}{}}}
\subsection{Method \code{get_gene_probes_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_gene_probes_with_http_info(
  gene,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_genes"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_genes}{}}}
\subsection{Method \code{get_genes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_genes(genes, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_genes_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_genes_with_http_info}{}}}
\subsection{Method \code{get_genes_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_genes_with_http_info(genes, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_annotations"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_annotations}{}}}
\subsection{Method \code{get_platform_annotations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_annotations(platform, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_annotations_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_annotations_with_http_info}{}}}
\subsection{Method \code{get_platform_annotations_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_annotations_with_http_info(
  platform,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_datasets}{}}}
\subsection{Method \code{get_platform_datasets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_datasets(
  platform,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_datasets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_datasets_with_http_info}{}}}
\subsection{Method \code{get_platform_datasets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_datasets_with_http_info(
  platform,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_element"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_element}{}}}
\subsection{Method \code{get_platform_element()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_element(
  platform,
  probes,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_element_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_element_with_http_info}{}}}
\subsection{Method \code{get_platform_element_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_element_with_http_info(
  platform,
  probes,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_element_genes"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_element_genes}{}}}
\subsection{Method \code{get_platform_element_genes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_element_genes(
  platform,
  probe,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_element_genes_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_element_genes_with_http_info}{}}}
\subsection{Method \code{get_platform_element_genes_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_element_genes_with_http_info(
  platform,
  probe,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_elements"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_elements}{}}}
\subsection{Method \code{get_platform_elements()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_elements(
  platform,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platform_elements_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platform_elements_with_http_info}{}}}
\subsection{Method \code{get_platform_elements_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platform_elements_with_http_info(
  platform,
  offset = 0,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platforms"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platforms}{}}}
\subsection{Method \code{get_platforms()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platforms(
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platforms_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platforms_with_http_info}{}}}
\subsection{Method \code{get_platforms_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platforms_with_http_info(
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platforms_by_ids"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platforms_by_ids}{}}}
\subsection{Method \code{get_platforms_by_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platforms_by_ids(
  platform,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_platforms_by_ids_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_platforms_by_ids_with_http_info}{}}}
\subsection{Method \code{get_platforms_by_ids_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_platforms_by_ids_with_http_info(
  platform,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_set"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_set}{}}}
\subsection{Method \code{get_result_set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_set(result_set, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_set_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_set_with_http_info}{}}}
\subsection{Method \code{get_result_set_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_set_with_http_info(result_set, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_set_as_tsv"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_set_as_tsv}{}}}
\subsection{Method \code{get_result_set_as_tsv()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_set_as_tsv(result_set_, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_set_as_tsv_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_set_as_tsv_with_http_info}{}}}
\subsection{Method \code{get_result_set_as_tsv_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_set_as_tsv_with_http_info(
  result_set_,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_sets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_sets}{}}}
\subsection{Method \code{get_result_sets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_sets(
  datasets = NULL,
  database_entries = NULL,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_result_sets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_result_sets_with_http_info}{}}}
\subsection{Method \code{get_result_sets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_result_sets_with_http_info(
  datasets = NULL,
  database_entries = NULL,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxa"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxa}{}}}
\subsection{Method \code{get_taxa()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxa(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxa_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxa_with_http_info}{}}}
\subsection{Method \code{get_taxa_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxa_with_http_info(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxa_by_ids"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxa_by_ids}{}}}
\subsection{Method \code{get_taxa_by_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxa_by_ids(taxa, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxa_by_ids_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxa_by_ids_with_http_info}{}}}
\subsection{Method \code{get_taxa_by_ids_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxa_by_ids_with_http_info(taxa, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_datasets}{}}}
\subsection{Method \code{get_taxon_datasets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_datasets(
  taxon,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_datasets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_datasets_with_http_info}{}}}
\subsection{Method \code{get_taxon_datasets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_datasets_with_http_info(
  taxon,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_genes"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_genes}{}}}
\subsection{Method \code{get_taxon_genes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_genes(taxon, gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_genes_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_genes_with_http_info}{}}}
\subsection{Method \code{get_taxon_genes_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_genes_with_http_info(taxon, gene, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_genes_overlapping_chromosome"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_genes_overlapping_chromosome}{}}}
\subsection{Method \code{get_taxon_genes_overlapping_chromosome()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_genes_overlapping_chromosome(
  taxon,
  chromosome,
  strand = "+",
  start = NULL,
  size = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-get_taxon_genes_overlapping_chromosome_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-get_taxon_genes_overlapping_chromosome_with_http_info}{}}}
\subsection{Method \code{get_taxon_genes_overlapping_chromosome_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$get_taxon_genes_overlapping_chromosome_with_http_info(
  taxon,
  chromosome,
  strand = "+",
  start = NULL,
  size = NULL,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search}{}}}
\subsection{Method \code{search()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search(
  query = NULL,
  taxon = NULL,
  platform = NULL,
  result_types = NULL,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_with_http_info}{}}}
\subsection{Method \code{search_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_with_http_info(
  query = NULL,
  taxon = NULL,
  platform = NULL,
  result_types = NULL,
  limit = 20,
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_annotations"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_annotations}{}}}
\subsection{Method \code{search_annotations()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_annotations(query, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_annotations_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_annotations_with_http_info}{}}}
\subsection{Method \code{search_annotations_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_annotations_with_http_info(query, data_file = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_datasets}{}}}
\subsection{Method \code{search_datasets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_datasets(
  query,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_datasets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_datasets_with_http_info}{}}}
\subsection{Method \code{search_datasets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_datasets_with_http_info(
  query,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_taxon_datasets"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_taxon_datasets}{}}}
\subsection{Method \code{search_taxon_datasets()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_taxon_datasets(
  taxon,
  query,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-search_taxon_datasets_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-search_taxon_datasets_with_http_info}{}}}
\subsection{Method \code{search_taxon_datasets_with_http_info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$search_taxon_datasets_with_http_info(
  taxon,
  query,
  filter = "",
  offset = 0,
  limit = 20,
  sort = "+id",
  data_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DefaultApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DefaultApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gemma_api$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
